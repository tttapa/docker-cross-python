name: Docker

on:
  release:
    types: ['released', 'prereleased']
  workflow_dispatch:

env:
  # Used for extracting staging directory before pushing
  TEMPORARY_TAG: ${{ github.repository }}:tmp
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        triple: ['x86_64-centos7-linux-gnu', 'aarch64-rpi3-linux-gnu', 'armv6-rpi-linux-gnueabihf', 'armv7-neon-linux-gnueabihf', 'armv8-rpi3-linux-gnueabihf']
        python-version: ['3.7.16', '3.8.16', '3.9.16', '3.10.11', '3.11.3']

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            prefix=${{ matrix.triple }}-py${{ matrix.python-version }}-
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=${{ matrix.triple }}-py${{ matrix.python-version }},prefix=

      # Build and load Docker image
      # https://github.com/docker/build-push-action
      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            "HOST_TRIPLE=${{ matrix.triple }}"
            "PYTHON_VERSION=${{ matrix.python-version }}"
          load: true
          tags: ${{ env.TEMPORARY_TAG }}

      - name: Export staging directory
        run: |
          container=$(docker run -d ${{ env.TEMPORARY_TAG }} \
              bash -c "chmod -R a-w /opt/${{ matrix.triple }}/python-${{ matrix.python-version }}; tar czf staging.tar.gz /opt/${{ matrix.triple }}/python-${{ matrix.python-version }}")
          status=$(docker wait $container)
          if [ $status -ne 0 ]; then
              echo "Error creating staging directory archives"
              exit 1
          fi
          echo "Copying staging directory from Docker container to host"
          docker cp $container:/staging.tar.gz ${{ matrix.triple }}-py${{ matrix.python-version }}.tar.gz
          docker rm $container

      - name: Upload staging directory
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.triple }}-py${{ matrix.python-version }}
          path: ${{ matrix.triple }}-py${{ matrix.python-version }}.tar.gz

      - name: Release staging directory
        if: ${{ github.event.action == 'released' || github.event.action == 'prereleased' }}
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
        with:
          files: ${{ matrix.triple }}-py${{ matrix.python-version }}.tar.gz

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            "HOST_TRIPLE=${{ matrix.triple }}"
            "PYTHON_VERSION=${{ matrix.python-version }}"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
